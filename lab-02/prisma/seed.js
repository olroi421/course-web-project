const { PrismaClient } = require("@prisma/client");
const bcrypt = require("bcrypt");

const prisma = new PrismaClient();

async function main() {
  console.log("üå± –ü–æ—á–∞—Ç–æ–∫ –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö...");

  // –û—á–∏—â–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–∏—Ö –¥–∞–Ω–∏—Ö
  await prisma.cartItem.deleteMany();
  await prisma.orderItem.deleteMany();
  await prisma.review.deleteMany();
  await prisma.order.deleteMany();
  await prisma.file.deleteMany();
  await prisma.product.deleteMany();
  await prisma.category.deleteMany();
  await prisma.user.deleteMany();

  console.log("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö –æ—á–∏—â–µ–Ω–∞");

  // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
  const hashedPassword = await bcrypt.hash("Admin123456", 10);

  const admin = await prisma.user.create({
    data: {
      email: "admin@example.com",
      password: hashedPassword,
      name: "–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä",
      role: "ADMIN",
    },
  });

  const moderator = await prisma.user.create({
    data: {
      email: "moderator@example.com",
      password: hashedPassword,
      name: "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä",
      role: "MODERATOR",
    },
  });

  const user = await prisma.user.create({
    data: {
      email: "user@example.com",
      password: hashedPassword,
      name: "–Ü–≤–∞–Ω –ü–µ—Ç—Ä–µ–Ω–∫–æ",
      role: "USER",
    },
  });

  console.log("‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ —Å—Ç–≤–æ—Ä–µ–Ω—ñ");

  // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π
  const categories = await Promise.all([
    prisma.category.create({
      data: {
        name: "–ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞",
        description: "–ù–æ—É—Ç–±—É–∫–∏, —Å–º–∞—Ä—Ç—Ñ–æ–Ω–∏, –ø–ª–∞–Ω—à–µ—Ç–∏ —Ç–∞ –∞–∫—Å–µ—Å—É–∞—Ä–∏",
      },
    }),
    prisma.category.create({
      data: {
        name: "–û–¥—è–≥",
        description: "–ß–æ–ª–æ–≤—ñ—á–∏–π —Ç–∞ –∂—ñ–Ω–æ—á–∏–π –æ–¥—è–≥",
      },
    }),
    prisma.category.create({
      data: {
        name: "–ö–Ω–∏–≥–∏",
        description: "–•—É–¥–æ–∂–Ω—è –ª—ñ—Ç–µ—Ä–∞—Ç—É—Ä–∞, –Ω–∞–≤—á–∞–ª—å–Ω–∞ –ª—ñ—Ç–µ—Ä–∞—Ç—É—Ä–∞",
      },
    }),
    prisma.category.create({
      data: {
        name: "–°–ø–æ—Ä—Ç",
        description: "–°–ø–æ—Ä—Ç–∏–≤–Ω–∏–π —ñ–Ω–≤–µ–Ω—Ç–∞—Ä —Ç–∞ –∞–∫—Å–µ—Å—É–∞—Ä–∏",
      },
    }),
    prisma.category.create({
      data: {
        name: "–î–ª—è –¥–æ–º—É",
        description: "–ú–µ–±–ª—ñ, –¥–µ–∫–æ—Ä, –ø–æ—Å—É–¥",
      },
    }),
  ]);

  console.log("‚úÖ –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó —Å—Ç–≤–æ—Ä–µ–Ω—ñ");

  // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–æ–¥—É–∫—Ç—ñ–≤
  const products = await Promise.all([
    // –ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞
    prisma.product.create({
      data: {
        name: "–ù–æ—É—Ç–±—É–∫ ASUS VivoBook 15",
        description:
          "–ü–æ—Ç—É–∂–Ω–∏–π –Ω–æ—É—Ç–±—É–∫ –¥–ª—è —Ä–æ–±–æ—Ç–∏ —Ç–∞ –Ω–∞–≤—á–∞–Ω–Ω—è –∑ –ø—Ä–æ—Ü–µ—Å–æ—Ä–æ–º Intel Core i5, 8GB RAM, 512GB SSD",
        price: 21999,
        stock: 15,
        categoryId: categories[0].id,
      },
    }),
    prisma.product.create({
      data: {
        name: "–°–º–∞—Ä—Ç—Ñ–æ–Ω Samsung Galaxy A54",
        description: "–°—É—á–∞—Å–Ω–∏–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω –∑ –∫–∞–º–µ—Ä–æ—é 50MP, 128GB –ø–∞–º'—è—Ç—ñ",
        price: 12999,
        stock: 30,
        categoryId: categories[0].id,
      },
    }),
    prisma.product.create({
      data: {
        name: "–ù–∞–≤—É—à–Ω–∏–∫–∏ Sony WH-1000XM5",
        description: "–ë–µ–∑–¥—Ä–æ—Ç–æ–≤—ñ –Ω–∞–≤—É—à–Ω–∏–∫–∏ –∑ –∞–∫—Ç–∏–≤–Ω–∏–º —à—É–º–æ–∑–∞–≥–ª—É—à–µ–Ω–Ω—è–º",
        price: 8999,
        stock: 20,
        categoryId: categories[0].id,
      },
    }),
    prisma.product.create({
      data: {
        name: "–ü–ª–∞–Ω—à–µ—Ç iPad Air",
        description: "–õ–µ–≥–∫–∏–π —Ç–∞ –ø–æ—Ç—É–∂–Ω–∏–π –ø–ª–∞–Ω—à–µ—Ç –¥–ª—è —Ä–æ–±–æ—Ç–∏ —Ç–∞ —Ä–æ–∑–≤–∞–≥",
        price: 18999,
        stock: 12,
        categoryId: categories[0].id,
      },
    }),
    // –û–¥—è–≥
    prisma.product.create({
      data: {
        name: "–ß–æ–ª–æ–≤—ñ—á–∞ —Ñ—É—Ç–±–æ–ª–∫–∞ Nike",
        description: "–ö–æ–º—Ñ–æ—Ä—Ç–Ω–∞ —Å–ø–æ—Ä—Ç–∏–≤–Ω–∞ —Ñ—É—Ç–±–æ–ª–∫–∞ –∑ –±–∞–≤–æ–≤–Ω–∏",
        price: 799,
        stock: 50,
        categoryId: categories[1].id,
      },
    }),
    prisma.product.create({
      data: {
        name: "–ñ—ñ–Ω–æ—á–µ –ø–ª–∞—Ç—Ç—è Zara",
        description: "–ï–ª–µ–≥–∞–Ω—Ç–Ω–µ –ª—ñ—Ç–Ω—î –ø–ª–∞—Ç—Ç—è",
        price: 1299,
        stock: 25,
        categoryId: categories[1].id,
      },
    }),
    prisma.product.create({
      data: {
        name: "–î–∂–∏–Ω—Å–∏ Levis 501",
        description: "–ö–ª–∞—Å–∏—á–Ω—ñ —á–æ–ª–æ–≤—ñ—á—ñ –¥–∂–∏–Ω—Å–∏",
        price: 2499,
        stock: 35,
        categoryId: categories[1].id,
      },
    }),
    // –ö–Ω–∏–≥–∏
    prisma.product.create({
      data: {
        name: "–ö–æ–±–∑–∞—Ä - –¢–∞—Ä–∞—Å –®–µ–≤—á–µ–Ω–∫–æ",
        description: "–ö–ª–∞—Å–∏—á–Ω–∞ –∑–±—ñ—Ä–∫–∞ –≤—ñ—Ä—à—ñ–≤ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ–≥–æ –ø–æ–µ—Ç–∞",
        price: 299,
        stock: 100,
        categoryId: categories[2].id,
      },
    }),
    prisma.product.create({
      data: {
        name: "JavaScript: The Good Parts",
        description: "–ù–∞–≤—á–∞–ª—å–Ω–∞ –∫–Ω–∏–≥–∞ –∑ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è –Ω–∞ JavaScript",
        price: 599,
        stock: 40,
        categoryId: categories[2].id,
      },
    }),
    prisma.product.create({
      data: {
        name: "Clean Code",
        description: "–ü–æ—Å—ñ–±–Ω–∏–∫ –∑ –Ω–∞–ø–∏—Å–∞–Ω–Ω—è —á–∏—Å—Ç–æ–≥–æ –∫–æ–¥—É –≤—ñ–¥ Robert Martin",
        price: 799,
        stock: 30,
        categoryId: categories[2].id,
      },
    }),
    // –°–ø–æ—Ä—Ç
    prisma.product.create({
      data: {
        name: "–ì–∞–Ω—Ç–µ–ª—ñ 2x5 –∫–≥",
        description: "–ù–∞–±—ñ—Ä –≥–∞–Ω—Ç–µ–ª–µ–π –¥–ª—è –¥–æ–º–∞—à–Ω—ñ—Ö —Ç—Ä–µ–Ω—É–≤–∞–Ω—å",
        price: 899,
        stock: 35,
        categoryId: categories[3].id,
      },
    }),
    prisma.product.create({
      data: {
        name: "–ô–æ–≥–∞ –º–∞—Ç",
        description: "–ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏–π –∫–∏–ª–∏–º–æ–∫ –¥–ª—è –π–æ–≥–∏ —Ç–∞ —Ñ—ñ—Ç–Ω–µ—Å—É",
        price: 699,
        stock: 45,
        categoryId: categories[3].id,
      },
    }),
    prisma.product.create({
      data: {
        name: "–ú'—è—á —Ñ—É—Ç–±–æ–ª—å–Ω–∏–π Adidas",
        description: "–ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏–π —Ñ—É—Ç–±–æ–ª—å–Ω–∏–π –º'—è—á —Ä–æ–∑–º—ñ—Ä 5",
        price: 1299,
        stock: 20,
        categoryId: categories[3].id,
      },
    }),
    // –î–ª—è –¥–æ–º—É
    prisma.product.create({
      data: {
        name: "–ù–∞—Å—Ç—ñ–ª—å–Ω–∞ –ª–∞–º–ø–∞ IKEA",
        description: "–°—É—á–∞—Å–Ω–∞ LED –ª–∞–º–ø–∞ –¥–ª—è —Ä–æ–±–æ—á–æ–≥–æ —Å—Ç–æ–ª—É",
        price: 499,
        stock: 60,
        categoryId: categories[4].id,
      },
    }),
    prisma.product.create({
      data: {
        name: "–ù–∞–±—ñ—Ä –ø–æ—Å—É–¥—É Luminarc",
        description: "–°–∫–ª—è–Ω–∏–π –Ω–∞–±—ñ—Ä –ø–æ—Å—É–¥—É –Ω–∞ 6 –ø–µ—Ä—Å–æ–Ω",
        price: 1499,
        stock: 0,
        categoryId: categories[4].id,
      },
    }),
    prisma.product.create({
      data: {
        name: "–ü–æ–¥—É—à–∫–∞ –æ—Ä—Ç–æ–ø–µ–¥–∏—á–Ω–∞",
        description: "–û—Ä—Ç–æ–ø–µ–¥–∏—á–Ω–∞ –ø–æ–¥—É—à–∫–∞ –∑ –µ—Ñ–µ–∫—Ç–æ–º –ø–∞–º'—è—Ç—ñ",
        price: 899,
        stock: 25,
        categoryId: categories[4].id,
      },
    }),
  ]);

  console.log("‚úÖ –ü—Ä–æ–¥—É–∫—Ç–∏ —Å—Ç–≤–æ—Ä–µ–Ω—ñ");

  // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—ñ–¥–≥—É–∫—ñ–≤
  await Promise.all([
    prisma.review.create({
      data: {
        userId: user.id,
        productId: products[0].id,
        rating: 5,
        comment: "–ß—É–¥–æ–≤–∏–π –Ω–æ—É—Ç–±—É–∫! –®–≤–∏–¥–∫–∏–π, –Ω–∞–¥—ñ–π–Ω–∏–π, —Ä–µ–∫–æ–º–µ–Ω–¥—É—é!",
      },
    }),
    prisma.review.create({
      data: {
        userId: user.id,
        productId: products[1].id,
        rating: 4,
        comment: "–ì–∞—Ä–Ω–∏–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω –∑–∞ —Å–≤–æ—é —Ü—ñ–Ω—É. –ö–∞–º–µ—Ä–∞ —Å–ø—Ä–∞–≤–¥—ñ —Ö–æ—Ä–æ—à–∞.",
      },
    }),
    prisma.review.create({
      data: {
        userId: moderator.id,
        productId: products[2].id,
        rating: 5,
        comment: "–ù–∞–π–∫—Ä–∞—â—ñ –Ω–∞–≤—É—à–Ω–∏–∫–∏ —è–∫—ñ —è –º–∞–≤. –®—É–º–æ–∑–∞–≥–ª—É—à–µ–Ω–Ω—è —Ç–æ–ø!",
      },
    }),
    prisma.review.create({
      data: {
        userId: admin.id,
        productId: products[7].id,
        rating: 5,
        comment: "–ö–ª–∞—Å–∏–∫–∞ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó –ª—ñ—Ç–µ—Ä–∞—Ç—É—Ä–∏. –û–±–æ–≤'—è–∑–∫–æ–≤–æ –¥–æ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—è!",
      },
    }),
    prisma.review.create({
      data: {
        userId: user.id,
        productId: products[10].id,
        rating: 4,
        comment: "–ì–∞–Ω—Ç–µ–ª—ñ —è–∫—ñ—Å–Ω—ñ, –∑—Ä—É—á–Ω—ñ. –î–æ—Å—Ç–∞–≤–∫–∞ —à–≤–∏–¥–∫–∞.",
      },
    }),
  ]);

  console.log("‚úÖ –í—ñ–¥–≥—É–∫–∏ —Å—Ç–≤–æ—Ä–µ–Ω—ñ");

  // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω—å
  await prisma.order.create({
    data: {
      userId: user.id,
      totalAmount: 22798,
      status: "DELIVERED",
      shippingAddress: "–≤—É–ª. –•—Ä–µ—â–∞—Ç–∏–∫ 1, –ö–∏—ó–≤, 01001",
      items: {
        create: [
          {
            productId: products[0].id,
            quantity: 1,
            price: products[0].price,
          },
          {
            productId: products[4].id,
            quantity: 1,
            price: products[4].price,
          },
        ],
      },
    },
  });

  await prisma.order.create({
    data: {
      userId: user.id,
      totalAmount: 13698,
      status: "PROCESSING",
      shippingAddress: "–≤—É–ª. –•—Ä–µ—â–∞—Ç–∏–∫ 1, –ö–∏—ó–≤, 01001",
      items: {
        create: [
          {
            productId: products[1].id,
            quantity: 1,
            price: products[1].price,
          },
          {
            productId: products[11].id,
            quantity: 1,
            price: products[11].price,
          },
        ],
      },
    },
  });

  console.log("‚úÖ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–≤–æ—Ä–µ–Ω—ñ");

  // –¢–æ–≤–∞—Ä–∏ –≤ –∫–æ—à–∏–∫—É
  await Promise.all([
    prisma.cartItem.create({
      data: {
        userId: user.id,
        productId: products[2].id,
        quantity: 1,
      },
    }),
    prisma.cartItem.create({
      data: {
        userId: user.id,
        productId: products[8].id,
        quantity: 2,
      },
    }),
    prisma.cartItem.create({
      data: {
        userId: moderator.id,
        productId: products[3].id,
        quantity: 1,
      },
    }),
  ]);

  console.log("‚úÖ –¢–æ–≤–∞—Ä–∏ –≤ –∫–æ—à–∏–∫—É —Å—Ç–≤–æ—Ä–µ–Ω—ñ");
  console.log("\nüéâ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö —É—Å–ø—ñ—à–Ω–æ –∑–∞–ø–æ–≤–Ω–µ–Ω–∞!\n");
  console.log("üìä –°—Ç–≤–æ—Ä–µ–Ω–æ:");
  console.log(`   - 3 –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤`);
  console.log(`   - ${categories.length} –∫–∞—Ç–µ–≥–æ—Ä—ñ–π`);
  console.log(`   - ${products.length} –ø—Ä–æ–¥—É–∫—Ç—ñ–≤`);
  console.log(`   - 5 –≤—ñ–¥–≥—É–∫—ñ–≤`);
  console.log(`   - 2 –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è`);
  console.log(`   - 3 —Ç–æ–≤–∞—Ä—ñ–≤ –≤ –∫–æ—à–∏–∫—É\n`);
  console.log("üë§ –¢–µ—Å—Ç–æ–≤—ñ –∞–∫–∞—É–Ω—Ç–∏:");
  console.log("   Admin: admin@example.com / Admin123456");
  console.log("   Moderator: moderator@example.com / Admin123456");
  console.log("   User: user@example.com / Admin123456\n");
}

main()
  .catch((e) => {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞:", e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });
